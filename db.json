{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Hacker/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/images/icon-heart.svg","path":"images/icon-heart.svg","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/base/normalize.css","path":"css/base/normalize.css","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/archive.styl","path":"css/components/archive.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/article.styl","path":"css/components/article.styl","modified":1,"renderable":1},{"_id":"themes/Hacker/source/css/components/footer.styl","path":"css/components/footer.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/header.styl","path":"css/components/header.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/icon.styl","path":"css/components/icon.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/layout.styl","path":"css/components/layout.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/pagination.styl","path":"css/components/pagination.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/responsive.styl","path":"css/components/responsive.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/css/components/syntax.styl","path":"css/components/syntax.styl","modified":0,"renderable":1},{"_id":"themes/Hacker/source/images/logo-mario.svg","path":"images/logo-mario.svg","modified":0,"renderable":1},{"_id":"themes/Hacker/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/Hacker/source/google24c7d17ea523931c.html","path":"google24c7d17ea523931c.html","modified":0,"renderable":1},{"_id":"themes/Hacker/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/teste.txt","path":"assets/teste.txt","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assinaturas/2017/index.html","path":"assinaturas/2017/index.html","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-144x144.png","path":"assets/favicons/android-chrome-144x144.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-256x256.png","path":"assets/favicons/android-chrome-256x256.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-192x192.png","path":"assets/favicons/android-chrome-192x192.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-36x36.png","path":"assets/favicons/android-chrome-36x36.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-384x384.png","path":"assets/favicons/android-chrome-384x384.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-48x48.png","path":"assets/favicons/android-chrome-48x48.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-512x512.png","path":"assets/favicons/android-chrome-512x512.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-72x72.png","path":"assets/favicons/android-chrome-72x72.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-96x96.png","path":"assets/favicons/android-chrome-96x96.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/apple-touch-icon.png","path":"assets/favicons/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/browserconfig.xml","path":"assets/favicons/browserconfig.xml","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/favicon-16x16.png","path":"assets/favicons/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/favicon-32x32.png","path":"assets/favicons/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/favicon.ico","path":"assets/favicons/favicon.ico","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/manifest.json","path":"assets/favicons/manifest.json","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/mstile-144x144.png","path":"assets/favicons/mstile-144x144.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/mstile-150x150.png","path":"assets/favicons/mstile-150x150.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/mstile-310x150.png","path":"assets/favicons/mstile-310x150.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/mstile-310x310.png","path":"assets/favicons/mstile-310x310.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/mstile-70x70.png","path":"assets/favicons/mstile-70x70.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/favicons/safari-pinned-tab.svg","path":"assets/favicons/safari-pinned-tab.svg","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/img/banner-site.png","path":"assets/img/banner-site.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/img/input-material-design.gif","path":"assets/img/input-material-design.gif","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assinaturas/2017/img/transp.gif","path":"assinaturas/2017/img/transp.gif","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assinaturas/2017/img/logo.jpg","path":"assinaturas/2017/img/logo.jpg","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/img/im-god.gif","path":"assets/img/im-god.gif","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/img/material-input-css.png","path":"assets/img/material-input-css.png","modified":0,"renderable":1},{"_id":"themes/Hacker/source/assets/img/mario-souto-blog-author.jpg","path":"assets/img/mario-souto-blog-author.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Hacker/.gitignore","hash":"803c06a7086b5817c03d2e8672da27bc56ba2bce","modified":1479862870000},{"_id":"themes/Hacker/README.md","hash":"9abc3b8feafc9d41b58f512c5edd70b313d31223","modified":1479862870000},{"_id":"themes/Hacker/README_zh-CN.md","hash":"04e4994e2967260dc6f64dcd11534a39b0697119","modified":1479862870000},{"_id":"themes/Hacker/_config.yml","hash":"d1d3fe826c6a58bff5c94798e37ee68a52c2cb43","modified":1485742600060},{"_id":"source/_posts/Segundo-post.md","hash":"2ea4613f7ba60fd616c96e272f8005ce990d2695","modified":1485443658540},{"_id":"source/_posts/hello-world.md","hash":"58f114ff4c7ff179dd6529d0ef6a8e7fac448b20","modified":1485443414399},{"_id":"source/about/index.md","hash":"d42ee9c40fa175d98fecef1be33bb9f035741ea8","modified":1485904884630},{"_id":"themes/Hacker/languages/default.yml","hash":"da6fe9344640072c73af99d883b4297f1aa14cc9","modified":1485742600064},{"_id":"themes/Hacker/languages/zh-CN.yml","hash":"cbb421e575c3a50138bd3b26834b547d50627369","modified":1479862870000},{"_id":"themes/Hacker/layout/archive.ejs","hash":"2238cbe29009aafb16969d2c70dceb3f71772123","modified":1479862870000},{"_id":"themes/Hacker/layout/index.ejs","hash":"1d2c487a95d25e763b5f7e004194eb6ee6b18135","modified":1479862870000},{"_id":"themes/Hacker/layout/layout.ejs","hash":"78634b4c1b368c443da6d73b4263d428dcd1515a","modified":1485905517050},{"_id":"themes/Hacker/layout/page.ejs","hash":"828a0063c885d3c08a76a4b26a4f0ede61431ece","modified":1485443074201},{"_id":"themes/Hacker/layout/post.ejs","hash":"84e00bbcc643dff4bd02880b3bbea658f510835f","modified":1479862870000},{"_id":"themes/Hacker/layout/components/archive.ejs","hash":"fa7d4f1516f078f63f1300a0aa1a2dd47ea4967c","modified":1485901550452},{"_id":"themes/Hacker/layout/components/article.ejs","hash":"0216079bad149d115e309af598b4b955d38f9a4a","modified":1485904798878},{"_id":"themes/Hacker/layout/components/comment.ejs","hash":"5d71151bcbc3a0671bf658222c943acb54632278","modified":1485742600126},{"_id":"themes/Hacker/layout/components/footer.ejs","hash":"9d2adab69cef3e33697929770be40fff65f72066","modified":1485742600130},{"_id":"themes/Hacker/layout/components/googleanalytics.ejs","hash":"fa11251ace0fc61cbcffb74f32fbf5bdbb201ff2","modified":1479862870000},{"_id":"themes/Hacker/layout/components/head.ejs","hash":"4cd4c7d432b9afe783d2673bacccd242861ae5bb","modified":1485906202587},{"_id":"themes/Hacker/layout/components/header.ejs","hash":"6f53c718f610ffade43033b9ee94e2a3988e1135","modified":1485742600209},{"_id":"themes/Hacker/layout/components/pagination.ejs","hash":"4ab5e3b0239e467923a0f91c771bcc9ee7889cfe","modified":1479862870000},{"_id":"themes/Hacker/source/css/style.styl","hash":"d1e5361c12d3140b2d524f8e97c2f9e0f29b85ee","modified":1479862870000},{"_id":"themes/Hacker/source/images/icon-heart.svg","hash":"ec483e96c88eea013fd8ac71a34a875107397f43","modified":1479862870000},{"_id":"themes/Hacker/source/css/base/normalize.css","hash":"e58275a588bb631a37a2988145eea231ed23176b","modified":1479862870000},{"_id":"themes/Hacker/source/css/components/archive.styl","hash":"2e2bc6ad6bec62a5432ace4c8ea6fdd8f0e2288f","modified":1485386661619},{"_id":"themes/Hacker/source/css/components/article.styl","hash":"d1a6f08cbb117e1d2716909b29d9775af519add6","modified":1485905598490},{"_id":"themes/Hacker/source/css/components/footer.styl","hash":"4fe16a3029a3a5f61f0b39251da894bbb24188e5","modified":1485386661753},{"_id":"themes/Hacker/source/css/components/header.styl","hash":"ac009b8dc15a12a5a92a48e963b432ba63f8f970","modified":1485742600518},{"_id":"themes/Hacker/source/css/components/icon.styl","hash":"8da3ff5b6cd1609fdfe0c564d47391367abc8808","modified":1479862870000},{"_id":"themes/Hacker/source/css/components/layout.styl","hash":"50b23a541c923ea28f1afeac6d7b22b2093c406f","modified":1485742600550},{"_id":"themes/Hacker/source/css/components/pagination.styl","hash":"f5d5c28149f204fe82c3c9414fce5c71f74de63d","modified":1485386661853},{"_id":"themes/Hacker/source/css/components/responsive.styl","hash":"053e7ec4c22845422440660b7e1d6b0dea5b4fbd","modified":1479862870000},{"_id":"themes/Hacker/source/css/components/syntax.styl","hash":"68b7deadab1ac13603eb5e812e1060db25227fd0","modified":1479862870000},{"_id":"themes/Hacker/source/images/logo-mario.svg","hash":"64d42f4bb18df88eabccc4b85a9bb994c0a0e231","modified":1485386630373},{"_id":"public/about/index.html","hash":"0b6b4a96d6099656d0c32cb75ce663cd1cb1ec31","modified":1485387126519},{"_id":"public/2017/01/25/Segundo-post/index.html","hash":"9441fe4d0b97e4f4e2289b37bba4a0071994a12f","modified":1485387126519},{"_id":"public/2017/01/24/hello-world/index.html","hash":"d6416612b809ef6a2d57a9136f56b1d7bd0b3e0b","modified":1485387126519},{"_id":"public/archives/index.html","hash":"8c87e1141f917aca4237a782e548fdf968e1d7af","modified":1485387126520},{"_id":"public/archives/2017/index.html","hash":"c9f2107fe2233d5dde3752aea17ec3aa1d0f3db9","modified":1485387126520},{"_id":"public/archives/2017/01/index.html","hash":"6cb93469c30e52273abc7c8204d331f840376d62","modified":1485387126520},{"_id":"public/index.html","hash":"5b8a7251af3939cd4f79272bc524c186b0ea1902","modified":1485387126520},{"_id":"public/images/icon-heart.svg","hash":"ec483e96c88eea013fd8ac71a34a875107397f43","modified":1485387126525},{"_id":"public/images/logo-mario.svg","hash":"64d42f4bb18df88eabccc4b85a9bb994c0a0e231","modified":1485387126525},{"_id":"public/css/base/normalize.css","hash":"e58275a588bb631a37a2988145eea231ed23176b","modified":1485387127260},{"_id":"public/css/components/archive.css","hash":"d4fe585434597eea808e45879f67f93eb25255b4","modified":1485387127260},{"_id":"public/css/components/article.css","hash":"9fe41a6cb16dd8031463698170aa7c52a48760d6","modified":1485387127260},{"_id":"public/css/components/footer.css","hash":"02396d241dd90684d966a6197fab3d55427f50af","modified":1485387127261},{"_id":"public/css/components/header.css","hash":"71cad9899b5bd2e03cc1d49bcd10a3d316575b8f","modified":1485387127261},{"_id":"public/css/components/icon.css","hash":"cdaf1a152184ff7def760f14095e4a2fa16cd6bd","modified":1485387127262},{"_id":"public/css/components/pagination.css","hash":"cec1e7db211011dce63d320bc6637ed7a6640cf0","modified":1485387127262},{"_id":"public/css/components/layout.css","hash":"b8625c7b90a973f2e37897f346e6f80b779fd9ca","modified":1485387127262},{"_id":"public/css/components/responsive.css","hash":"216eb94fc69007de995fc8d382670ba00a9574e8","modified":1485387127263},{"_id":"public/css/components/syntax.css","hash":"00970bfdb168aa13622c829920907ca3416829f8","modified":1485387127263},{"_id":"public/css/style.css","hash":"613b87592974cae32033e7ed40f9f3c67892cbf6","modified":1485387127263},{"_id":"themes/Hacker/layout/components/page-content.ejs","hash":"2ea3b5ee6171d996907a29f625b1612e5c4a14e6","modified":1485905584061},{"_id":"source/_posts/inputs-materializados-com-css.md","hash":"41bcc33c5562a48fc8954b1ac68db7a122c358b0","modified":1485743617851},{"_id":"themes/Hacker/source/CNAME","hash":"3b00acb93f9f7a17f3c62cb8e7ca858a49158f59","modified":1485742600370},{"_id":"themes/Hacker/source/google24c7d17ea523931c.html","hash":"120b60add221bc9a989cf065cc24b59a9453037a","modified":1485742600580},{"_id":"themes/Hacker/source/robots.txt","hash":"98a253323ba4f9b80fbfcd63e1afec9e01df82ce","modified":1485742600591},{"_id":"themes/Hacker/source/assets/teste.txt","hash":"2576b24ac8c325f27de2d05fef07161423f2fb0a","modified":1485742600452},{"_id":"themes/Hacker/source/assinaturas/2017/index.html","hash":"77e6213551171705df8e7ba0da9e4106b5d28e9c","modified":1485742600473},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-144x144.png","hash":"c0a3060f0bd8ce55d5088ae3555aa84a2cc8e121","modified":1485742600373},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-256x256.png","hash":"8cce5c11383049c08fba7a22bb2d466cd074b622","modified":1485742600378},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-192x192.png","hash":"d663d9b2883f4931bf5fc1ef3a76d1df193940a5","modified":1485742600376},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-36x36.png","hash":"cdfdde32dfe98444d7284612168523894b25c3ac","modified":1485742600380},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-384x384.png","hash":"ff500d7c61cbc14d4930b3170608b310a6eb9163","modified":1485742600382},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-48x48.png","hash":"7fc5b2e34d99150be2561247fd92ab6363fd8edc","modified":1485742600384},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-512x512.png","hash":"5ac4521cf45ab70d39c18cea7a5db9053631b087","modified":1485742600387},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-72x72.png","hash":"5305538cd7dbd6fc8c0693833b01c34fc518e0ea","modified":1485742600389},{"_id":"themes/Hacker/source/assets/favicons/android-chrome-96x96.png","hash":"c423c3e0e40fc4b621e3c423bfac984139233f39","modified":1485742600391},{"_id":"themes/Hacker/source/assets/favicons/apple-touch-icon.png","hash":"c74077ec3410876597f830d5bc50a2b1d2aa2450","modified":1485742600393},{"_id":"themes/Hacker/source/assets/favicons/browserconfig.xml","hash":"baa1c60dbea24ea7edeb24ac29267e5180aba67f","modified":1485742600400},{"_id":"themes/Hacker/source/assets/favicons/favicon-16x16.png","hash":"08a69457b1a5701308f760360026039e113e6e85","modified":1485742600402},{"_id":"themes/Hacker/source/assets/favicons/favicon-32x32.png","hash":"40cdde8929a8a66cf35600ec40536c1b6e3784f9","modified":1485742600404},{"_id":"themes/Hacker/source/assets/favicons/favicon.ico","hash":"7f5c62f638467133bf5343ce6f4886e98340e89f","modified":1485742600413},{"_id":"themes/Hacker/source/assets/favicons/manifest.json","hash":"54b2555ffcc00f6edf0597093a8fb8303e24fd53","modified":1485742600420},{"_id":"themes/Hacker/source/assets/favicons/mstile-144x144.png","hash":"8dd570d38f39dcf2a720d996a45c3d9d6c209681","modified":1485742600422},{"_id":"themes/Hacker/source/assets/favicons/mstile-150x150.png","hash":"cb63ca6dd499c2955c6fdf99cfa885e45417ba95","modified":1485742600425},{"_id":"themes/Hacker/source/assets/favicons/mstile-310x150.png","hash":"9cc9a1905cec19cdc2e98c118bed469419527af1","modified":1485742600427},{"_id":"themes/Hacker/source/assets/favicons/mstile-310x310.png","hash":"b7c036b46661343c4936d45dd1d5f3093004c9e1","modified":1485742600430},{"_id":"themes/Hacker/source/assets/favicons/mstile-70x70.png","hash":"9e5cf7ec7299af98cc5bee568e812f7d28b4951f","modified":1485742600432},{"_id":"themes/Hacker/source/assets/favicons/safari-pinned-tab.svg","hash":"6cf04ef72c6276d6bb8bcbbc2315a54a987e2f62","modified":1485742600434},{"_id":"themes/Hacker/source/assets/img/banner-site.png","hash":"0c5a54055ccdcfef0dea962a88b67f0e2120bfd1","modified":1485742600437},{"_id":"themes/Hacker/source/assets/img/input-material-design.gif","hash":"28129542651bc6ec347b5474dfc4c7cbb93b473d","modified":1485742600451},{"_id":"themes/Hacker/source/assinaturas/2017/img/transp.gif","hash":"6bdcb32ee75e957a5085c010f4dfd0c716bfdadc","modified":1485742600464},{"_id":"themes/Hacker/source/assinaturas/2017/img/logo.jpg","hash":"07c79339ca1af86d7e0af776230888dfc14da0f9","modified":1485742600462},{"_id":"themes/Hacker/source/assets/img/im-god.gif","hash":"e541440340df1503b9284a4ba20eff29e6395c1e","modified":1485742600448},{"_id":"themes/Hacker/source/assets/img/material-input-css.png","hash":"137d5a60fdcf161e0b4bde947a3bac94629d9e66","modified":1485743575405},{"_id":"themes/Hacker/source/assets/img/mario-souto-blog-author.jpg","hash":"30011cdfc43755d561986fce210c888dfc3e344d","modified":1485904030212}],"Category":[],"Data":[],"Page":[{"title":"Sobre Mim","date":"2017-01-24T02:52:45.000Z","url":"/about/","description":"É possível validar dados com HTML e CSS?","_content":"![Mario Souto - Desenvolvedor Front](https://mariosouto.com/assets/img/mario-souto-blog-author.jpg)\nMe chamo Mário Souto, nasci na cidade de São Paulo e atualmente sou desenvolvedor front-end. Trabalho na [Agência Digital Pulso](http://www.agenciapulso.com.br/) e sou formado em Análise e Desenvolvimento de sistemas pela UNIP.\n\nMinha paixão pela web começou quando ainda pequeno eu pude criar e manter alguns servidores de jogos online. Hoje, essa paixão cresce dia após dia junto com o incrível poder de criar desde um simples blog até uma aplicação complexa que a plataforma me proporciona.\n\n## Habilidades\n\n* HTML (Template Engines)\n* CSS (RSCSS, ITCSS, BEM)\n* Preprocessors Concepts\n* Responsive\n* JavaScript (Some Patterns)\n* Semantic web\n* Web accessibility\n* SEO\n* Client Side performance\n* Cross Browser/Device/SO\n* Kanban\n\n## Ferramentas\n\n* AngularJS\n* ReactJS\n* Git\n* Task Runners\n* Tests\n \n## Contato\n\n* [Facebook](https://facebook.com/soutomario)\n* [Twitter](https://twitter.com/marioquemario)\n* [Github](https://github.com/soutomario)\n","source":"about/index.md","raw":"---\ntitle: Sobre Mim\ndate: 2017-01-24 00:52:45\nurl: /about/\ndescription: É possível validar dados com HTML e CSS?\n---\n![Mario Souto - Desenvolvedor Front](https://mariosouto.com/assets/img/mario-souto-blog-author.jpg)\nMe chamo Mário Souto, nasci na cidade de São Paulo e atualmente sou desenvolvedor front-end. Trabalho na [Agência Digital Pulso](http://www.agenciapulso.com.br/) e sou formado em Análise e Desenvolvimento de sistemas pela UNIP.\n\nMinha paixão pela web começou quando ainda pequeno eu pude criar e manter alguns servidores de jogos online. Hoje, essa paixão cresce dia após dia junto com o incrível poder de criar desde um simples blog até uma aplicação complexa que a plataforma me proporciona.\n\n## Habilidades\n\n* HTML (Template Engines)\n* CSS (RSCSS, ITCSS, BEM)\n* Preprocessors Concepts\n* Responsive\n* JavaScript (Some Patterns)\n* Semantic web\n* Web accessibility\n* SEO\n* Client Side performance\n* Cross Browser/Device/SO\n* Kanban\n\n## Ferramentas\n\n* AngularJS\n* ReactJS\n* Git\n* Task Runners\n* Tests\n \n## Contato\n\n* [Facebook](https://facebook.com/soutomario)\n* [Twitter](https://twitter.com/marioquemario)\n* [Github](https://github.com/soutomario)\n","updated":"2017-01-31T23:21:24.630Z","path":"about/index.html","_id":"ciydk6rag0001wktfmxq44si2","comments":1,"layout":"page","content":"<p><img src=\"https://mariosouto.com/assets/img/mario-souto-blog-author.jpg\" alt=\"Mario Souto - Desenvolvedor Front\"><br>Me chamo Mário Souto, nasci na cidade de São Paulo e atualmente sou desenvolvedor front-end. Trabalho na <a href=\"http://www.agenciapulso.com.br/\" target=\"_blank\" rel=\"external\">Agência Digital Pulso</a> e sou formado em Análise e Desenvolvimento de sistemas pela UNIP.</p>\n<p>Minha paixão pela web começou quando ainda pequeno eu pude criar e manter alguns servidores de jogos online. Hoje, essa paixão cresce dia após dia junto com o incrível poder de criar desde um simples blog até uma aplicação complexa que a plataforma me proporciona.</p>\n<h2 id=\"Habilidades\"><a href=\"#Habilidades\" class=\"headerlink\" title=\"Habilidades\"></a>Habilidades</h2><ul>\n<li>HTML (Template Engines)</li>\n<li>CSS (RSCSS, ITCSS, BEM)</li>\n<li>Preprocessors Concepts</li>\n<li>Responsive</li>\n<li>JavaScript (Some Patterns)</li>\n<li>Semantic web</li>\n<li>Web accessibility</li>\n<li>SEO</li>\n<li>Client Side performance</li>\n<li>Cross Browser/Device/SO</li>\n<li>Kanban</li>\n</ul>\n<h2 id=\"Ferramentas\"><a href=\"#Ferramentas\" class=\"headerlink\" title=\"Ferramentas\"></a>Ferramentas</h2><ul>\n<li>AngularJS</li>\n<li>ReactJS</li>\n<li>Git</li>\n<li>Task Runners</li>\n<li>Tests</li>\n</ul>\n<h2 id=\"Contato\"><a href=\"#Contato\" class=\"headerlink\" title=\"Contato\"></a>Contato</h2><ul>\n<li><a href=\"https://facebook.com/soutomario\" target=\"_blank\" rel=\"external\">Facebook</a></li>\n<li><a href=\"https://twitter.com/marioquemario\" target=\"_blank\" rel=\"external\">Twitter</a></li>\n<li><a href=\"https://github.com/soutomario\" target=\"_blank\" rel=\"external\">Github</a></li>\n</ul>\n","excerpt":"","more":"<p><img src=\"https://mariosouto.com/assets/img/mario-souto-blog-author.jpg\" alt=\"Mario Souto - Desenvolvedor Front\"><br>Me chamo Mário Souto, nasci na cidade de São Paulo e atualmente sou desenvolvedor front-end. Trabalho na <a href=\"http://www.agenciapulso.com.br/\">Agência Digital Pulso</a> e sou formado em Análise e Desenvolvimento de sistemas pela UNIP.</p>\n<p>Minha paixão pela web começou quando ainda pequeno eu pude criar e manter alguns servidores de jogos online. Hoje, essa paixão cresce dia após dia junto com o incrível poder de criar desde um simples blog até uma aplicação complexa que a plataforma me proporciona.</p>\n<h2 id=\"Habilidades\"><a href=\"#Habilidades\" class=\"headerlink\" title=\"Habilidades\"></a>Habilidades</h2><ul>\n<li>HTML (Template Engines)</li>\n<li>CSS (RSCSS, ITCSS, BEM)</li>\n<li>Preprocessors Concepts</li>\n<li>Responsive</li>\n<li>JavaScript (Some Patterns)</li>\n<li>Semantic web</li>\n<li>Web accessibility</li>\n<li>SEO</li>\n<li>Client Side performance</li>\n<li>Cross Browser/Device/SO</li>\n<li>Kanban</li>\n</ul>\n<h2 id=\"Ferramentas\"><a href=\"#Ferramentas\" class=\"headerlink\" title=\"Ferramentas\"></a>Ferramentas</h2><ul>\n<li>AngularJS</li>\n<li>ReactJS</li>\n<li>Git</li>\n<li>Task Runners</li>\n<li>Tests</li>\n</ul>\n<h2 id=\"Contato\"><a href=\"#Contato\" class=\"headerlink\" title=\"Contato\"></a>Contato</h2><ul>\n<li><a href=\"https://facebook.com/soutomario\">Facebook</a></li>\n<li><a href=\"https://twitter.com/marioquemario\">Twitter</a></li>\n<li><a href=\"https://github.com/soutomario\">Github</a></li>\n</ul>\n"}],"Post":[{"title":"Inputs Materializados com CSS","date":"2016-12-22T02:00:00.000Z","url":"/inputs-materializados-com-css/","description":"É possível validar dados com HTML e CSS?","cover":"material-input-css.png","_content":"Depois de muita luta e vencer a faculdade, cá estou eu escrevendo meu primeiro post que dedico ao @afonsopacifer (pela insistência em me motivar a escrever). Bom eu sempre usei Android e acho muito mágico o que a galera faz nos aplicativos e como algumas animações violam o que eu considero como física do front-end.\n\n<!-- more --> \n\nBoa parte dessas animações na web são facilmente feitas com JS…\n\n> Ahhh, mas ai é fácil quero ver fazer diferente, ser pioneiro, inovador, senhor descolado.\n\nCof cof, continuando… Sim é relativamente fácil fazer essas animações com JS e justamente por buscar uma outra alternativa eu resolvi fazer esse post. Então o desafio foi lançado: **Como fazer um Material Input somente com CSS?**\n\n## Primeiramente ~~(fora temer)~~\n\nOs ingredientes necessários para essa receita serão: HTML5 Data Form Validations, Alguns seletores e lógica de CSS <3, amor e pensar um pouco fora do padrão.\n\nVale ressaltar que **isso é um experimento**, e que experimentos são uma fonte importante de conhecimento para lidar com problemas do dia-a-dia.\n\n### Data Form Validations\nFaz algum tempo que muitas pessoas utilizam o atributo **required** do HTML5 para fazer algumas validações simples em formulários como no exemplo abaixo:\n\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bBzZXj\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"HTML5 Data Form Validations\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/soutomario/pen/bBzZXj/\">HTML5 Data Form Validations</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\nAs validações com required são bem bacanas, pois elas pegam o [type] do input e tiram por base dele se o campo foi preenchido corretamente ou não, validando e-mails, texts e etc…\n\nPorém, uma coisa que pouca gente sabe é que é possível juntamente do required utilizar o atributo **pattern** que possibilita fazer validações complexas baseadas em expressões regulares sem o uso de JavaScript.\n\n![WHERE IS YOUR GOD NOW?](https://mariosouto.com/assets/img/im-god.gif)\n> WHERE IS YOUR GOD NOW?\n\nCalma que não para por ai, além de ser possível fazer validações no HTML é possível capturar o estado delas utilizando CSS com as Pseudo Classes **valid** e **invalid**, ou seja: _É possível estilizar um elemento, se baseando em tratamento de dados somente utilizando linguagens de marcação e estilo!_\n\n## Segundamente: Mãos a obra!\n\nDessa vez nosso objetivo não é o trapézio descendente e sim esse cara aqui:\n\n![Exemplo de input do Material Design](https://mariosouto.com/assets/img/input-material-design.gif)\n\nIndo pelo passo a passo, vamos começar pela estrutura HTML que será bem simples:\n\n<script src=\"https://gist.github.com/soutomario/8fc58a5149603e00d02288ebdeb2d509.js\"></script>\n\n1 - Uma tag section e uma form\n2 - Um input-container para agrupar o conjunto da label com o input\n3 - E por fim, um input com um id \"name\" e um label logo _abaixo_, com o `for=` referenciando para o id do input (a ordem nesse caso é bem importante e vocês já irão entender).\n\nFeito isso, o próximo passo é colocar nossa regex no atributo pattern deixando ele assim: `pattern=\".+\"` (essa condição retorna válido caso qualquer caracter seja inserido dentro do input).\n\nAgora vem a parte do amor com CSS <3\n\n### Base\n\n<script src=\"https://gist.github.com/soutomario/184bcff2e14c6e4a45e1b6e0cf7c7a65.js\"></script>\n\nA estrutura é bem simples, basicamente aplicamos um estilo no input para ele se parecer com o do Material Design e posicionamentos de forma absoluta o label a esquerda do input-container e centralizado em relação ao input.\n\n### Interação\n\n<script src=\"https://gist.github.com/soutomario/302b568ba17d5a62c954ee997d70b98b.js\"></script>\n\nAqui é onde acontece a mágica, nós validamos quando o input for valido no HTML e pelo CSS verificamos esse estado, adicionando um efeito ao label que é o elemento seguinte ao input.\n\nE para finalizar com um toque especial vamos dar um tapa no visual:\n\n<script src=\"https://gist.github.com/soutomario/e3013895740025ea91715bbe643138fb.js\"></script>\n\nE finalmente aqui está o resultado do nosso experimento!\n\n<p data-height=\"357\" data-theme-id=\"dark\" data-slug-hash=\"LbENBr\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"Material Design Input - CSS Pure\" data-preview=\"true\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/soutomario/pen/LbENBr/\">Material Design Input - CSS Pure</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\nBom, espero que tenham gostado do post em breve trarei mais conteúdos, quaisquer dúvidas deixem nos comentários ou me chamem em alguma rede social!\n\n- [Facebook](https://www.facebook.com/soutomario)\n\n\n## Referências:\n\n* https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation\n* https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid\n* https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid\n* http://materializecss.com/forms.html\n\n## Post Original:\n* http://cssbrasil.org/inputs-materializados-com-css/\n","source":"_posts/inputs-materializados-com-css.md","raw":"---\ntitle: Inputs Materializados com CSS\ndate: 2016-12-22\nurl: /inputs-materializados-com-css/\ndescription: É possível validar dados com HTML e CSS?\ncover: material-input-css.png\ntags:\n- css\n- js\n- front\n---\nDepois de muita luta e vencer a faculdade, cá estou eu escrevendo meu primeiro post que dedico ao @afonsopacifer (pela insistência em me motivar a escrever). Bom eu sempre usei Android e acho muito mágico o que a galera faz nos aplicativos e como algumas animações violam o que eu considero como física do front-end.\n\n<!-- more --> \n\nBoa parte dessas animações na web são facilmente feitas com JS…\n\n> Ahhh, mas ai é fácil quero ver fazer diferente, ser pioneiro, inovador, senhor descolado.\n\nCof cof, continuando… Sim é relativamente fácil fazer essas animações com JS e justamente por buscar uma outra alternativa eu resolvi fazer esse post. Então o desafio foi lançado: **Como fazer um Material Input somente com CSS?**\n\n## Primeiramente ~~(fora temer)~~\n\nOs ingredientes necessários para essa receita serão: HTML5 Data Form Validations, Alguns seletores e lógica de CSS <3, amor e pensar um pouco fora do padrão.\n\nVale ressaltar que **isso é um experimento**, e que experimentos são uma fonte importante de conhecimento para lidar com problemas do dia-a-dia.\n\n### Data Form Validations\nFaz algum tempo que muitas pessoas utilizam o atributo **required** do HTML5 para fazer algumas validações simples em formulários como no exemplo abaixo:\n\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bBzZXj\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"HTML5 Data Form Validations\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/soutomario/pen/bBzZXj/\">HTML5 Data Form Validations</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\nAs validações com required são bem bacanas, pois elas pegam o [type] do input e tiram por base dele se o campo foi preenchido corretamente ou não, validando e-mails, texts e etc…\n\nPorém, uma coisa que pouca gente sabe é que é possível juntamente do required utilizar o atributo **pattern** que possibilita fazer validações complexas baseadas em expressões regulares sem o uso de JavaScript.\n\n![WHERE IS YOUR GOD NOW?](https://mariosouto.com/assets/img/im-god.gif)\n> WHERE IS YOUR GOD NOW?\n\nCalma que não para por ai, além de ser possível fazer validações no HTML é possível capturar o estado delas utilizando CSS com as Pseudo Classes **valid** e **invalid**, ou seja: _É possível estilizar um elemento, se baseando em tratamento de dados somente utilizando linguagens de marcação e estilo!_\n\n## Segundamente: Mãos a obra!\n\nDessa vez nosso objetivo não é o trapézio descendente e sim esse cara aqui:\n\n![Exemplo de input do Material Design](https://mariosouto.com/assets/img/input-material-design.gif)\n\nIndo pelo passo a passo, vamos começar pela estrutura HTML que será bem simples:\n\n<script src=\"https://gist.github.com/soutomario/8fc58a5149603e00d02288ebdeb2d509.js\"></script>\n\n1 - Uma tag section e uma form\n2 - Um input-container para agrupar o conjunto da label com o input\n3 - E por fim, um input com um id \"name\" e um label logo _abaixo_, com o `for=` referenciando para o id do input (a ordem nesse caso é bem importante e vocês já irão entender).\n\nFeito isso, o próximo passo é colocar nossa regex no atributo pattern deixando ele assim: `pattern=\".+\"` (essa condição retorna válido caso qualquer caracter seja inserido dentro do input).\n\nAgora vem a parte do amor com CSS <3\n\n### Base\n\n<script src=\"https://gist.github.com/soutomario/184bcff2e14c6e4a45e1b6e0cf7c7a65.js\"></script>\n\nA estrutura é bem simples, basicamente aplicamos um estilo no input para ele se parecer com o do Material Design e posicionamentos de forma absoluta o label a esquerda do input-container e centralizado em relação ao input.\n\n### Interação\n\n<script src=\"https://gist.github.com/soutomario/302b568ba17d5a62c954ee997d70b98b.js\"></script>\n\nAqui é onde acontece a mágica, nós validamos quando o input for valido no HTML e pelo CSS verificamos esse estado, adicionando um efeito ao label que é o elemento seguinte ao input.\n\nE para finalizar com um toque especial vamos dar um tapa no visual:\n\n<script src=\"https://gist.github.com/soutomario/e3013895740025ea91715bbe643138fb.js\"></script>\n\nE finalmente aqui está o resultado do nosso experimento!\n\n<p data-height=\"357\" data-theme-id=\"dark\" data-slug-hash=\"LbENBr\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"Material Design Input - CSS Pure\" data-preview=\"true\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/soutomario/pen/LbENBr/\">Material Design Input - CSS Pure</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\nBom, espero que tenham gostado do post em breve trarei mais conteúdos, quaisquer dúvidas deixem nos comentários ou me chamem em alguma rede social!\n\n- [Facebook](https://www.facebook.com/soutomario)\n\n\n## Referências:\n\n* https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation\n* https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid\n* https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid\n* http://materializecss.com/forms.html\n\n## Post Original:\n* http://cssbrasil.org/inputs-materializados-com-css/\n","slug":"inputs-materializados-com-css","published":1,"updated":"2017-01-30T02:33:37.851Z","_id":"ciyjgzpo40000lctf1at9bnlu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Depois de muita luta e vencer a faculdade, cá estou eu escrevendo meu primeiro post que dedico ao @afonsopacifer (pela insistência em me motivar a escrever). Bom eu sempre usei Android e acho muito mágico o que a galera faz nos aplicativos e como algumas animações violam o que eu considero como física do front-end.</p>\n<a id=\"more\"></a> \n<p>Boa parte dessas animações na web são facilmente feitas com JS…</p>\n<blockquote>\n<p>Ahhh, mas ai é fácil quero ver fazer diferente, ser pioneiro, inovador, senhor descolado.</p>\n</blockquote>\n<p>Cof cof, continuando… Sim é relativamente fácil fazer essas animações com JS e justamente por buscar uma outra alternativa eu resolvi fazer esse post. Então o desafio foi lançado: <strong>Como fazer um Material Input somente com CSS?</strong></p>\n<h2 id=\"Primeiramente-fora-temer\"><a href=\"#Primeiramente-fora-temer\" class=\"headerlink\" title=\"Primeiramente (fora temer)\"></a>Primeiramente <del>(fora temer)</del></h2><p>Os ingredientes necessários para essa receita serão: HTML5 Data Form Validations, Alguns seletores e lógica de CSS &lt;3, amor e pensar um pouco fora do padrão.</p>\n<p>Vale ressaltar que <strong>isso é um experimento</strong>, e que experimentos são uma fonte importante de conhecimento para lidar com problemas do dia-a-dia.</p>\n<h3 id=\"Data-Form-Validations\"><a href=\"#Data-Form-Validations\" class=\"headerlink\" title=\"Data Form Validations\"></a>Data Form Validations</h3><p>Faz algum tempo que muitas pessoas utilizam o atributo <strong>required</strong> do HTML5 para fazer algumas validações simples em formulários como no exemplo abaixo:</p>\n<p></p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bBzZXj\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"HTML5 Data Form Validations\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/soutomario/pen/bBzZXj/\" target=\"_blank\" rel=\"external\">HTML5 Data Form Validations</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\" target=\"_blank\" rel=\"external\">@soutomario</a>) on <a href=\"http://codepen.io\" target=\"_blank\" rel=\"external\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>As validações com required são bem bacanas, pois elas pegam o [type] do input e tiram por base dele se o campo foi preenchido corretamente ou não, validando e-mails, texts e etc…</p>\n<p>Porém, uma coisa que pouca gente sabe é que é possível juntamente do required utilizar o atributo <strong>pattern</strong> que possibilita fazer validações complexas baseadas em expressões regulares sem o uso de JavaScript.</p>\n<p><img src=\"https://mariosouto.com/assets/img/im-god.gif\" alt=\"WHERE IS YOUR GOD NOW?\"></p>\n<blockquote>\n<p>WHERE IS YOUR GOD NOW?</p>\n</blockquote>\n<p>Calma que não para por ai, além de ser possível fazer validações no HTML é possível capturar o estado delas utilizando CSS com as Pseudo Classes <strong>valid</strong> e <strong>invalid</strong>, ou seja: <em>É possível estilizar um elemento, se baseando em tratamento de dados somente utilizando linguagens de marcação e estilo!</em></p>\n<h2 id=\"Segundamente-Maos-a-obra\"><a href=\"#Segundamente-Maos-a-obra\" class=\"headerlink\" title=\"Segundamente: Mãos a obra!\"></a>Segundamente: Mãos a obra!</h2><p>Dessa vez nosso objetivo não é o trapézio descendente e sim esse cara aqui:</p>\n<p><img src=\"https://mariosouto.com/assets/img/input-material-design.gif\" alt=\"Exemplo de input do Material Design\"></p>\n<p>Indo pelo passo a passo, vamos começar pela estrutura HTML que será bem simples:</p>\n<script src=\"https://gist.github.com/soutomario/8fc58a5149603e00d02288ebdeb2d509.js\"></script>\n\n<p>1 - Uma tag section e uma form<br>2 - Um input-container para agrupar o conjunto da label com o input<br>3 - E por fim, um input com um id “name” e um label logo <em>abaixo</em>, com o <code>for=</code> referenciando para o id do input (a ordem nesse caso é bem importante e vocês já irão entender).</p>\n<p>Feito isso, o próximo passo é colocar nossa regex no atributo pattern deixando ele assim: <code>pattern=&quot;.+&quot;</code> (essa condição retorna válido caso qualquer caracter seja inserido dentro do input).</p>\n<p>Agora vem a parte do amor com CSS &lt;3</p>\n<h3 id=\"Base\"><a href=\"#Base\" class=\"headerlink\" title=\"Base\"></a>Base</h3><script src=\"https://gist.github.com/soutomario/184bcff2e14c6e4a45e1b6e0cf7c7a65.js\"></script>\n\n<p>A estrutura é bem simples, basicamente aplicamos um estilo no input para ele se parecer com o do Material Design e posicionamentos de forma absoluta o label a esquerda do input-container e centralizado em relação ao input.</p>\n<h3 id=\"Interacao\"><a href=\"#Interacao\" class=\"headerlink\" title=\"Interação\"></a>Interação</h3><script src=\"https://gist.github.com/soutomario/302b568ba17d5a62c954ee997d70b98b.js\"></script>\n\n<p>Aqui é onde acontece a mágica, nós validamos quando o input for valido no HTML e pelo CSS verificamos esse estado, adicionando um efeito ao label que é o elemento seguinte ao input.</p>\n<p>E para finalizar com um toque especial vamos dar um tapa no visual:</p>\n<script src=\"https://gist.github.com/soutomario/e3013895740025ea91715bbe643138fb.js\"></script>\n\n<p>E finalmente aqui está o resultado do nosso experimento!</p>\n<p></p><p data-height=\"357\" data-theme-id=\"dark\" data-slug-hash=\"LbENBr\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"Material Design Input - CSS Pure\" data-preview=\"true\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/soutomario/pen/LbENBr/\" target=\"_blank\" rel=\"external\">Material Design Input - CSS Pure</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\" target=\"_blank\" rel=\"external\">@soutomario</a>) on <a href=\"http://codepen.io\" target=\"_blank\" rel=\"external\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>Bom, espero que tenham gostado do post em breve trarei mais conteúdos, quaisquer dúvidas deixem nos comentários ou me chamem em alguma rede social!</p>\n<ul>\n<li><a href=\"https://www.facebook.com/soutomario\" target=\"_blank\" rel=\"external\">Facebook</a></li>\n</ul>\n<h2 id=\"Referencias\"><a href=\"#Referencias\" class=\"headerlink\" title=\"Referências:\"></a>Referências:</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation</a></li>\n<li><a href=\"https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid</a></li>\n<li><a href=\"https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid</a></li>\n<li><a href=\"http://materializecss.com/forms.html\" target=\"_blank\" rel=\"external\">http://materializecss.com/forms.html</a></li>\n</ul>\n<h2 id=\"Post-Original\"><a href=\"#Post-Original\" class=\"headerlink\" title=\"Post Original:\"></a>Post Original:</h2><ul>\n<li><a href=\"http://cssbrasil.org/inputs-materializados-com-css/\" target=\"_blank\" rel=\"external\">http://cssbrasil.org/inputs-materializados-com-css/</a></li>\n</ul>\n","excerpt":"<p>Depois de muita luta e vencer a faculdade, cá estou eu escrevendo meu primeiro post que dedico ao @afonsopacifer (pela insistência em me motivar a escrever). Bom eu sempre usei Android e acho muito mágico o que a galera faz nos aplicativos e como algumas animações violam o que eu considero como física do front-end.</p>","more":"<p>Boa parte dessas animações na web são facilmente feitas com JS…</p>\n<blockquote>\n<p>Ahhh, mas ai é fácil quero ver fazer diferente, ser pioneiro, inovador, senhor descolado.</p>\n</blockquote>\n<p>Cof cof, continuando… Sim é relativamente fácil fazer essas animações com JS e justamente por buscar uma outra alternativa eu resolvi fazer esse post. Então o desafio foi lançado: <strong>Como fazer um Material Input somente com CSS?</strong></p>\n<h2 id=\"Primeiramente-fora-temer\"><a href=\"#Primeiramente-fora-temer\" class=\"headerlink\" title=\"Primeiramente (fora temer)\"></a>Primeiramente <del>(fora temer)</del></h2><p>Os ingredientes necessários para essa receita serão: HTML5 Data Form Validations, Alguns seletores e lógica de CSS &lt;3, amor e pensar um pouco fora do padrão.</p>\n<p>Vale ressaltar que <strong>isso é um experimento</strong>, e que experimentos são uma fonte importante de conhecimento para lidar com problemas do dia-a-dia.</p>\n<h3 id=\"Data-Form-Validations\"><a href=\"#Data-Form-Validations\" class=\"headerlink\" title=\"Data Form Validations\"></a>Data Form Validations</h3><p>Faz algum tempo que muitas pessoas utilizam o atributo <strong>required</strong> do HTML5 para fazer algumas validações simples em formulários como no exemplo abaixo:</p>\n<p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bBzZXj\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"HTML5 Data Form Validations\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/soutomario/pen/bBzZXj/\">HTML5 Data Form Validations</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>As validações com required são bem bacanas, pois elas pegam o [type] do input e tiram por base dele se o campo foi preenchido corretamente ou não, validando e-mails, texts e etc…</p>\n<p>Porém, uma coisa que pouca gente sabe é que é possível juntamente do required utilizar o atributo <strong>pattern</strong> que possibilita fazer validações complexas baseadas em expressões regulares sem o uso de JavaScript.</p>\n<p><img src=\"https://mariosouto.com/assets/img/im-god.gif\" alt=\"WHERE IS YOUR GOD NOW?\"></p>\n<blockquote>\n<p>WHERE IS YOUR GOD NOW?</p>\n</blockquote>\n<p>Calma que não para por ai, além de ser possível fazer validações no HTML é possível capturar o estado delas utilizando CSS com as Pseudo Classes <strong>valid</strong> e <strong>invalid</strong>, ou seja: <em>É possível estilizar um elemento, se baseando em tratamento de dados somente utilizando linguagens de marcação e estilo!</em></p>\n<h2 id=\"Segundamente-Maos-a-obra\"><a href=\"#Segundamente-Maos-a-obra\" class=\"headerlink\" title=\"Segundamente: Mãos a obra!\"></a>Segundamente: Mãos a obra!</h2><p>Dessa vez nosso objetivo não é o trapézio descendente e sim esse cara aqui:</p>\n<p><img src=\"https://mariosouto.com/assets/img/input-material-design.gif\" alt=\"Exemplo de input do Material Design\"></p>\n<p>Indo pelo passo a passo, vamos começar pela estrutura HTML que será bem simples:</p>\n<script src=\"https://gist.github.com/soutomario/8fc58a5149603e00d02288ebdeb2d509.js\"></script>\n\n<p>1 - Uma tag section e uma form<br>2 - Um input-container para agrupar o conjunto da label com o input<br>3 - E por fim, um input com um id “name” e um label logo <em>abaixo</em>, com o <code>for=</code> referenciando para o id do input (a ordem nesse caso é bem importante e vocês já irão entender).</p>\n<p>Feito isso, o próximo passo é colocar nossa regex no atributo pattern deixando ele assim: <code>pattern=&quot;.+&quot;</code> (essa condição retorna válido caso qualquer caracter seja inserido dentro do input).</p>\n<p>Agora vem a parte do amor com CSS &lt;3</p>\n<h3 id=\"Base\"><a href=\"#Base\" class=\"headerlink\" title=\"Base\"></a>Base</h3><script src=\"https://gist.github.com/soutomario/184bcff2e14c6e4a45e1b6e0cf7c7a65.js\"></script>\n\n<p>A estrutura é bem simples, basicamente aplicamos um estilo no input para ele se parecer com o do Material Design e posicionamentos de forma absoluta o label a esquerda do input-container e centralizado em relação ao input.</p>\n<h3 id=\"Interacao\"><a href=\"#Interacao\" class=\"headerlink\" title=\"Interação\"></a>Interação</h3><script src=\"https://gist.github.com/soutomario/302b568ba17d5a62c954ee997d70b98b.js\"></script>\n\n<p>Aqui é onde acontece a mágica, nós validamos quando o input for valido no HTML e pelo CSS verificamos esse estado, adicionando um efeito ao label que é o elemento seguinte ao input.</p>\n<p>E para finalizar com um toque especial vamos dar um tapa no visual:</p>\n<script src=\"https://gist.github.com/soutomario/e3013895740025ea91715bbe643138fb.js\"></script>\n\n<p>E finalmente aqui está o resultado do nosso experimento!</p>\n<p><p data-height=\"357\" data-theme-id=\"dark\" data-slug-hash=\"LbENBr\" data-default-tab=\"html,result\" data-user=\"soutomario\" data-embed-version=\"2\" data-pen-title=\"Material Design Input - CSS Pure\" data-preview=\"true\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/soutomario/pen/LbENBr/\">Material Design Input - CSS Pure</a> by Mario Souto (<a href=\"http://codepen.io/soutomario\">@soutomario</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>Bom, espero que tenham gostado do post em breve trarei mais conteúdos, quaisquer dúvidas deixem nos comentários ou me chamem em alguma rede social!</p>\n<ul>\n<li><a href=\"https://www.facebook.com/soutomario\">Facebook</a></li>\n</ul>\n<h2 id=\"Referencias\"><a href=\"#Referencias\" class=\"headerlink\" title=\"Referências:\"></a>Referências:</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation\">https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation</a></li>\n<li><a href=\"https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid\">https://developer.mozilla.org/pt-BR/docs/Web/CSS/:invalid</a></li>\n<li><a href=\"https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid\">https://developer.mozilla.org/pt-BR/docs/Web/CSS/:valid</a></li>\n<li><a href=\"http://materializecss.com/forms.html\">http://materializecss.com/forms.html</a></li>\n</ul>\n<h2 id=\"Post-Original\"><a href=\"#Post-Original\" class=\"headerlink\" title=\"Post Original:\"></a>Post Original:</h2><ul>\n<li><a href=\"http://cssbrasil.org/inputs-materializados-com-css/\">http://cssbrasil.org/inputs-materializados-com-css/</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciyjgzpo40000lctf1at9bnlu","tag_id":"ciyjgzpoj0001lctfdi9mwawk","_id":"ciyjgzpp10002lctfa5kt7pli"},{"post_id":"ciyjgzpo40000lctf1at9bnlu","tag_id":"ciyei5vtj00013wtfbzifq2wi","_id":"ciyjgzpp70003lctfflqa521k"},{"post_id":"ciyjgzpo40000lctf1at9bnlu","tag_id":"ciyei5vtl00023wtfjcd6lk5b","_id":"ciyjgzpp90004lctfekovmgnp"}],"Tag":[{"name":"teste","_id":"ciyei5vt600003wtfb1zp2blj"},{"name":"js","_id":"ciyei5vtj00013wtfbzifq2wi"},{"name":"front","_id":"ciyei5vtl00023wtfjcd6lk5b"},{"name":"start","_id":"ciyezjkc40000k4tf2sz4glen"},{"name":"new","_id":"ciyezjkca0001k4tfv904enfo"},{"name":"blog","_id":"ciyezjkcc0002k4tf7gwgzibv"},{"name":"css","_id":"ciyjgzpoj0001lctfdi9mwawk"}]}}